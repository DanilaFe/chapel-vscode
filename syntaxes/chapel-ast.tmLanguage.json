{
  "name": "chapel-ast",
  "scopeName": "source.chapelAst",
  "fileTypes": ["ast"],
  "patterns": [
    { "include": "#keywords" },
    { "include": "#astid" },
    { "include": "#flags" }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "match": "\\b((call)|(label)|(function)|(ForLoop)|(Forall)|(Defer)|(if)|(return)|(yield)|(gotoReturn))\\b",
          "name": "keyword.control.chapelAst"
        },
        {
          "match": "'\\b((move)|(end of statement)|(new))\\b'",
          "name": "keyword.control.chapelAst"
        },
        {
          "match": "\\b((arg)|(const)|(in)|(_?ref)|(_?array)|(_?domain)|(range)|(unmanaged)|(_?shared)|(_?owned)|(borrowed)|(record)|(class)|(_?unknown)|(val)|(type)|(param)|(_?void)|(int)|(real)|(bool)|(range)|(locale))\\b",
          "name": "storage.type.chapelAst"
        },
        {
          "match": "\\b(const)\\b\\?",
          "name": "storage.type.chapelAst"
        },
        {
          "match": "\\b(this)\\b",
          "name": "variable.language.this.chapelAst"
        }
      ]
    },
    "astid": {
      "patterns": [
        {
          "match": "\\[\\b([0-9]+)\\b\\]",
          "name": "constant.numeric.chapelAst"
        },
        {
          "match": "\\(\\b([0-9]+)\\b",
          "captures": {
            "1": { "name": "constant.numeric.chapelAst" }
          }
        }
      ]
    },
    "flags": {
      "patterns": [
        {
          "name": "string.quoted.double.chapelAst",
          "begin": "\"",
          "end": "\"|\n",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.string.begin.chapelAst" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.definition.string.end.chapelAst" }
          }
        }
      ]
    }
  }
}
